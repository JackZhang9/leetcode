你现在是一场采用特殊赛制棒球比赛的记录员。这场比赛由若干回合组成，过去几回合的得分可能会影响以后几回合的得分。

比赛开始时，记录是空白的。你会得到一个记录操作的字符串列表 ops，其中 ops[i] 是你需要记录的第 i 项操作，ops 遵循下述规则：

整数 x - 表示本回合新获得分数 x
"+" - 表示本回合新获得的得分是前两次得分的总和。题目数据保证记录此操作时前面总是存在两个有效的分数。
"D" - 表示本回合新获得的得分是前一次得分的两倍。题目数据保证记录此操作时前面总是存在一个有效的分数。
"C" - 表示前一次得分无效，将其从记录中移除。题目数据保证记录此操作时前面总是存在一个有效的分数。
请你返回记录中所有得分的总和。

 

示例 1：

输入：ops = ["5","2","C","D","+"]
输出：30
解释：
"5" - 记录加 5 ，记录现在是 [5]
"2" - 记录加 2 ，记录现在是 [5, 2]
"C" - 使前一次得分的记录无效并将其移除，记录现在是 [5].
"D" - 记录加 2 * 5 = 10 ，记录现在是 [5, 10].
"+" - 记录加 5 + 10 = 15 ，记录现在是 [5, 10, 15].
所有得分的总和 5 + 10 + 15 = 30

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/baseball-game
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。


代码；20210107
class Solution:
    def calPoints(self, ops: List[str]) -> int:
        lst = []
        #遍历，利用栈的特性
        for st in ops:
            #可以用这种方法：isnumeric不能判断负数，因此取st[1:]用-后的数判断是否为数字。或者把判断数字放在else里去。
            if st.isnumeric() or st[1:].isnumeric():
                lst.append(int(st))
            elif st == 'C':
                lst.pop()
            elif st == 'D':
                lst.append(lst[-1]*2)
            elif st == '+':
                lst.append(lst[-1]+lst[-2])
            # else:
            #     #因为只有这几种操作，所以把判断数字放在最后
            #     lst.append(int(st))
        return sum(lst)
        
        小结;顺着题目思路，完成
